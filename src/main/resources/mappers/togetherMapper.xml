<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bogus.bogusplus.suda.cafe.together.dao.TogetherDAO">

	<insert id="insertTogether" parameterType="map">
		INSERT INTO
			`together` 
		(
			`userId`
			, `cafeId`
			, `title`
			, `placeName`
			, `placeAddressX`
			, `placeAddressY`
			, `date`
			, `content`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			#{userId}
			, #{cafeId}
			, #{title}
			, #{placeName}
			, #{placeAddressX}
			, #{placeAddressY}
			, #{date}
			, #{content}
			, now()
			, now()
		)
	</insert>
	
	<select id="selectGetTogetherList" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Together">
		SELECT
			`id`
			, `userId`
			, `cafeId`
			, `title`
			, `placeName`
			, `placeAddressX`
			, `placeAddressY`
			, `date`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM
			`together`
		WHERE
			`userId` != #{userId}
		AND
			`cafeId` = #{cafeId}
		ORDER BY
			`id`
		DESC
	</select>
	
	<select id="selectGetTogetherMyList" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Together">
		SELECT
			`id`
			, `userId`
			, `cafeId`
			, `title`
			, `placeName`
			, `placeAddressX`
			, `placeAddressY`
			, `date`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM
			`together`
		WHERE
			`userId` = #{userId}
		AND
			`cafeId` = #{cafeId}
		ORDER BY
			`id`
		DESC
	</select>
	
	<select id="selectCountTogetherStatus" parameterType="map" resultType="int">
		SELECT
			count(1)
		FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
		AND
		    `status` = 2
	</select>
	
	<select id="getStatus" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Status">
		SELECT
			`id`
			, `userId`
			, `togetherId`
			, `status`
			, `createdAt`
			, `updatedAt`
		FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
		AND
			`userId` = #{userId}
	</select>
	
	<select id="getStatusByTogetherId" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Status">
		SELECT
			`id`
			, `userId`
			, `togetherId`
			, `status`
			, `createdAt`
			, `updatedAt`
		FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
	</select>
	
	<select id="getStatusByTogetherIdList" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Status">
		SELECT
			`id`
			, `userId`
			, `togetherId`
			, `status`
			, `createdAt`
			, `updatedAt`
		FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
	</select>
	
	<insert id="insertAttendStatus" parameterType="map">
		INSERT INTO
			`status` 
		(
			`id`
			, `userId`
			, `togetherId`
			, `status`
			, `createdAt`
			, `updatedAt`
		)
		VALUE
		(
			`id`
			, #{userId}
			, #{togetherId}
			, 1
			, now()
			, now()
		)
	</insert>
	
	<delete id="deleteAttendStatus" parameterType="map">
		DELETE FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
		AND
			`userId` = #{userId}
	</delete>
	
	<update id="updateAcceptStatus" parameterType="map">
		UPDATE
			`status` 
		SET
			`status` = 2
			, `updatedAt` = now()
		WHERE
			`userId` = #{userId}
		AND 
			`togetherId` = #{togetherId}
	</update>
	
	<update id="updateRefuseStatus" parameterType="map">
		UPDATE
			`status` 
		SET
			`status` = 3
			, `updatedAt` = now()
		WHERE
			`userId` = #{userId}
		AND 
			`togetherId` = #{togetherId}
	</update>
	
	<delete id="deleteTogether" parameterType="int">
		DELETE FROM
			`together`
		WHERE
			`id` = #{id}
	</delete>
	
	<delete id="deleteAttendStatusByTogetherId" parameterType="int">
		DELETE FROM
			`status`
		WHERE
			`togetherId` = #{togetherId}
	</delete>
	
	<select id="selectGetTogether" parameterType="map" resultType="com.bogus.bogusplus.suda.cafe.together.model.Together">
		SELECT
			`id`
			, `userId`
			, `cafeId`
			, `title`
			, `placeName`
			, `placeAddressX`
			, `placeAddressY`
			, `date`
			, `content`
			, `createdAt`
			, `updatedAt`
		FROM
			`together`
		WHERE
			`id` = #{id}
	</select>
	
	<update id="updateTogether" parameterType="map">
		UPDATE
			`together` 
		SET
			`title` = #{title}
			, `placeName` = #{placeName}
			, `placeAddressX` = #{placeAddressX}
			, `placeAddressY` = #{placeAddressY}
			, `date` = #{date}
			, `content` = #{content}
			, `updatedAt` = now()
		WHERE
			`id` = #{id}
	</update>
	
	
</mapper>